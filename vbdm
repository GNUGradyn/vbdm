#!/bin/bash
# VBDM (Virtual Block Device Manager)
# Copyright Gradyn Wursten 2017
# This software is licensed under the MIT license. See vbdm license for more info.
echo "Virtual Block Device Manager 0.2"
echo "Copyright Gradyn Wursten 2017: see vbdm license for more info."
set -e
set -o pipefail
usage() {
  echo "Usage: vbdm (command) [arg1] [arg2]"
	echo "  Commands:"
	echo "   license: displays the MIT license with copyright notice"
	echo "   create-ntfs (arg1: name of file, arg2: size in MiB): Creates an ntfs Virtual Block Device"
	echo "   create-ext4 (arg1: name of file, arg2: size in MiB): Creates an ext4 Virtual Block Device"
	echo "   delete (arg1: name of file): delete a Virtual Block Device"
	echo "   mount (arg1: name of file): mount a Virtual Block Device"
	echo "   unmount (arg1: name of file): unmount a Virtual Block Device"
	echo "   dir (arg1: name of file): displays dir vitual block device is mounted (or would be mounted if it was mounted)"
	echo "   make-real (arg1: name of file, arg2: device to clone to): Clones a Virtual Block Device onto an actual device"
	echo "   make-virtual (arg1: device to clone from, arg2: name of file): Clones an actual device onto a Virtual Block Device"
}
if [[ "$@" == "" ]]; then
	usage
	exit 1
fi
if [[ "$1" == "create-ext4" ]]; then
	if [[ "$2" == "" || "$3" == "" ]]; then
		usage
		exit 1
	fi
	if [ -f $2 ]; then
		echo "File $2 allredy exists!"
		exit 2
	fi
	echo "Creating $2 with size $3M..."
	fallocate -l $3M $2
	echo "Creating ext4 filesystem on $2..."
	mkfs.ext4 $2
        echo "Mounting and setting permissions..."
				if [ -d /media/vbdm/$2 ]; then
		 read -p "MOUNTPOINT ALLREDY EXISTS! I can try to unmount anything on it and delete it if you would like [y/n] " response
	         if [ $response == "y" ]; then
			 if grep -qs '/media/vbdm/$2' /proc/mounts; then
				 umount /media/vbdm/$2
			fi
			sudo rmdir /media/vbdm/$2

		else
			echo "Cleaning up and aborting.."
			rm -r $2
			exit 1
	 fi
	fi
        sudo mkdir /media/vbdm/$2
        sudo mount $2 /media/vbdm/$2
        sudo chown -R root:root /media/vbdm/$2
        sudo chmod -R 777 /media/vbdm/$2
	echo "Cleaning up..."
        sudo umount /media/vbdm/$2
        sudo rm -r /media/vbdm/$2
        echo "Done!"
        exit 1
fi
if [[ "$1" == "mount" ]]; then
	if [[ "$2" == "" ]]; then
		usage
		exit 1
	fi
	echo "Mounting $2 on /media/vbdm/$2..."
	sudo mkdir /media/vbdm/$2
	sudo mount $2 /media/vbdm/$2
	echo "Done!"
        exit 0
fi
if [[ "$1" == "unmount" ]]; then
	if [[ "$2" == "" ]]; then
		usage
		exit 1
	fi
	echo "Unmounting $2 from /media/vbdm/$2"
	sudo umount /media/vbdm/$2
	sudo rm -r /media/vbdm/$2
	echo "Done!"
	exit 0
fi
if [[ "$1" == "delete" ]]; then
	if [[ "$2" == "" ]]; then
		usage
		exit 1
	fi
	echo "Unmounting and deleting $2..."
        if grep -qs '/edia/vbdm/$2' /proc/mounts; then
	  sudo umount /media/vbdm/$2
	fi
	rm $2
	if [ -f /media/vdbm/$2 ]; then
	   rmdir /media/vbdm/$2
        fi
	echo "Done!"
	exit 0
fi
if [[ "$1" == "create-ntfs" ]]; then
	if [[ "$2" == "" || "$3" == "" ]]; then
		usage
		exit 1
	fi
	if [ -f $2 ]; then
		echo "file $2 allredy exists!"
		exit 2
	fi
	echo "creating $2 with size $3M..."
	fallocate -l $3M $2
	echo "Creating ntfs filesystem on $2..."
	#mkfs.ntfs will refuse to create partitions on a file without the force flag.
	#https://bugs.launchpad.net/nova/+bug/928749
        # -Q so it doesnt zero out the drive thats allredy zeros
	mkfs.ntfs -Q --force $2
	echo "Mounting and setting permissions..."
	if [ -d /media/vbdm/$2 ]; then
		 read -p "MOUNTPOINT ALLREDY EXISTS! I can try to unmount anything on it and delete it if you would like [y/n] " response
	         if [ $response == "y" ]; then
			 if grep -qs '/media/vbdm/$2' /proc/mounts; then
				 umount /media/vbdm/$2
			fi
			sudo rmdir /media/vbdm/$2

		else
			echo "Cleaning up and aborting.."
			rm -r $2
			exit 1
	 fi
	fi
	sudo mkdir /media/vbdm/$2
	sudo mount $2 /media/vbdm/$2
	sudo chown -R root:root /media/vbdm/$2
	sudo chmod -R 777 /media/vbdm/$2
	echo "Cleaning up..."
	sudo umount /media/vbdm/$2
	sudo rmdir /media/vbdm/$2
	echo "Done!"
	exit 0
fi
	if [[ $1 == "license" ]]; then
	  echo ""
		echo "Copyright 2017 Gradyn Wursten and Sahibdeep Nann"
    echo 'Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:'
    echo 'The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.'
    echo 'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    exit 0
	fi
	if [[ $1 == "dir" ]]; then
	  if [[ $2 == "" ]]; then
		 usage
		 exit 1
		 fi
		echo ""
		echo "/media/vbdm/$2"
		exit 0
	fi
if [[ $1 == "make-real" ]]; then
  if [[ $2 == "" || $3 == "" ]]; then
   usage
   exit 1
   fi
   echo "Cloning $2 to $3..."
   dd if=$2 of=$3
   echo "Done!"
fi
if [[ $1 == "make-virtual" ]]; then
  if [[ $2 == "" || $3 == "" ]]; then
   usage
   exit 1
   fi
   echo "Cloning $3 to $2..."
   dd if=$3 of=$2
   echo "Done!"
fi
 usage
 exit 1
